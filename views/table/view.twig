{{ use('yii/widgets/LinkPager') }}
{{ use('kartik/daterange/DateRangePicker') }}
{{ use('kartik/daterange/MomentAsset') }}
{{ use('yii/web/JqueryAsset') }}
{{ use({'FontawesomeAsset': 'rmrevin/yii/fontawesome/AssetBundle'}) }}
{{ use('kartik/export/ExportMenu') }}
{{ register_jquery_asset() }}
{{ register_moment_asset() }}
{{ register_fontawesome_asset() }}
{{ set(this, 'params', {'breadcrumbs': [{
       'label': t('app', 'Tables'),
       'url': url(['table/index'])
   }, table_title]})
}}

{% set glyph_pencil = '<span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>' %}
{% set glyph_trash = '<span class="glyphicon glyphicon-trash" aria-hidden="true"></span>' %}

<h1>{{ table_title }}</h1>
<div class="actions">
  <button type="button" class="btn btn-add btn-lg btn-primary" data-toggle="modal" data-target="#group-data">
    {{ t('app', 'New row') }}
  </button>
  {{ export_menu_widget({
         dataProvider: dataProvider,
         target: '_blank',
         columnSelectorOptions: {
             class: 'btn btn-lg btn-default',
         },
         dropdownOptions: {
             label: t('app', 'Export'),
             class: 'btn btn-lg btn-success',
         },
         filename: table_title
  }) }}
</div>

<h2>{{ t('app', 'Rows') }}</h2>

{% if not groups|length is same as(0) %}
  {% set found_class = 'hidden' %}
{% endif %}
<p class="text-info not-found {{ found_class }}"><em>{{ t('app', 'No rows found') }}</em></p>

<div id="table-wrapper" class="scrollable-x">
  <table class="table table-bordered table-condensed table-stripped text-center" style="max-width: 100%">
    {% for level, row in table %}
      <tr>
        {% if first_iteration is not defined %}
          <th rowspan="{{ n_levels }}" class="bottom-column">{{ t('app', 'Date range') }}</th>
        {% endif %}
        {% for parent_id, item in row %}
          <th colspan="{{ item['no_leaves'] }}" rowspan="{{ item['span_levels'] }}" class="break-all bottom-column col-xs-1">
            {{ item['name'] }}
          </th>
        {% endfor %}
        {% if first_iteration is not defined %}
          <th rowspan="{{ n_levels }}" class="bottom-column"></th>
          {% set first_iteration = false %}
        {% endif %}
      </tr>
    {% endfor %}
    {% for group in groups %}
      <tr>
        <td nowrap><small class="date-range">{{ group['from'] }} - {{ group['to'] }}</small></td>
        {% for reading in group['itemReadingsExtended'] %}
          <td class="value">
            {{ reading['value'] }}
          </td>
        {% endfor %}
        <td class="actions">
          <a type="button" class="btn btn-xs btn-default" data-content="<small><p>{{ t('app', 'Created at') ~ ' <mark>' ~ group['created_at'] ~ '</mark> ' ~ t('app', 'by') ~ ' <strong>' ~ group['creator_name'] ~ '</strong></p><p> ' ~ t('app', 'Updated at') ~ ' <mark>' ~ group['updated_at'] ~ '</mark> ' ~ t('app', 'by') ~ ' <strong>' ~ group['updater_name'] }}</strong></p></small>" data-toggle="popover" data-placement="left" data-html="true" data-trigger="focus" tabindex="0" data-title="{{ t('app', 'Audit trail info') }}"><span class="glyphicon glyphicon-info-sign"></span></a>
          {{ html.a(glyph_pencil, url({0: 'table/ajax-save-readings', 
              'id': group['id']}), {'class': 'btn btn-update btn-xs btn-default'}) | raw }}
          {% if app.user().can('admin') %}
            {{ html.a(glyph_trash, url({0: 'table/ajax-delete-group',
                'id': group['id']}), {'class': 'btn btn-delete btn-xs btn-default', 'data-loading-text': '<i class="fa fa-trash-o fa-spin wobble-fix"></i>'}) | raw }}
          {% endif %}
        </td>
      </tr>
    {% endfor %}
  </table>
</div>

{% if pagination %}
    {{ link_pager_widget({'pagination': pagination}) }}
{% endif %}

<div id="group-data" class="modal modal-add fade" tabindex="-1" role="dialog">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title modal-add-only">{{ t('app', 'New row') }}</h4>
        <h4 class="modal-title modal-edit-only">{{ t('app', 'Edit row') }}</h4>
      </div>
      <form class="modal-body">
        <div class="row">
          <div class="form-group col-md-4 col-sm-6">
            <label class="control-label">{{ t('app', 'Date range') }}</label>
            <div class="input-group">
              <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                {{ date_range_picker_widget({
                     'model': group_model,
                     'name': 'Group_date_range'
                }) }}
            </div>
            <p class="help-block"></p>
          </div>
        </div>
        <label class="control-label modal-add-only">{{ t('app', 'New row readings') }}</label>
        <label class="control-label modal-edit-only">{{ t('app', 'Edit row readings') }}</label>
        <div class="scrollable-x">
          <table class="table table-bordered table-editable text-center">
            {% for level, row in table %}
              <tr>
                {% for parent_id, item in row %}
                  <th colspan="{{ item['no_leaves'] }}" rowspan="{{ item['span_levels'] }}" class="break-all bottom-column">
                    {{ item['name'] }}
                  </th>
                {% endfor %}
              </tr>
            {% endfor %}
            <tr>
              {% for item in items %}
                <td class="editable">
                  {% if item.values %}
                    <select class="form-control" name="ItemReading[{{ item['id'] }}]">
                    {% for value in item.values %}
                      <option value="{{ value.value }}">{{ value.value }}</option>
                    {% endfor %}
                    </select>
                  {% else %}
                      <input name="ItemReading[{{ item['id'] }}]" />
                  {% endif %}
                </td>
              {% endfor %}
            </tr>
          </table>
        </div>
      </form>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal" >{{ t('app', 'Cancel') }}</button>
        <button type="submit" class="btn btn-primary modal-add-only" data-loading-text="{{ t('app', 'Adding row') }}...">{{ t('app', 'Add row') }}</button>
        <button type="submit" class="btn btn-primary modal-edit-only" data-loading-text="{{ t('app', 'Updating row') }}...">{{ t('app', 'Update row') }}</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

{{ void(this.beginBlock('table_view_js')) }}
$('[data-toggle="popover"]').popover()
$groupData = $('#group-data');
$valueInputs = $groupData.find('table :input');

$('[type="submit"]', $groupData).on('click', function() {
    if ($groupData.hasClass('modal-add')) createReadings($(this));
    else updateReadings($(this));
});

function createReadings($btn) {
    $btn.button('loading');
    $('.form-group').removeClass('has-error');
    $('.help-block').html('');
    $.ajax({
        method: 'post',
        url: '{{ url(['table/ajax-save-readings']) | raw }}',
        data: $('#group-data').find('form').serialize(),
        dataType: 'json',
        error: function(jqXHR, textStatus, errorThrown) {
            msg = JSON.parse(jqXHR.responseJSON.message);
            for (attr in msg) {
                $input = $('input[name="Group_{attr}"]'.replace('{attr}', attr));
                $input.closest('.form-group')
                    .addClass('has-error')
                    .find('.help-block')
                    .html(msg[attr].join(','));
            }
        },
        complete: function() {
            $btn.button('reset');
        },
        success: function() {
            location.reload();
        }
    });
}

function updateReadings($btn) {
    $btn.button('loading');
    var url = $('#group-data').find('form').attr('action');
    $.ajax({
        method: 'post',
        url: url,
        data: $('#group-data').find('form').serialize(),
        dataType: 'json',
        complete: function() {
            $btn.button('reset');
        },
        success: function() {
            location.reload();
        }
    });
}

$('.actions .btn-add').on('click', function() {
    $groupData.removeClass('modal-edit').addClass('modal-add');
    $groupData.modal('show');
    $groupData.find('form :input').val('');
    return false;
});

$('#table-wrapper').on('click', '.table .btn-delete', function() {
    if (!confirm('{{ t('app', 'Are you sure you want to delete this row?') }}')) return false;
    var $btn = $(this);
    $btn.button('loading');
    $.ajax({
        method: 'post',
        url: $btn.attr('href'),
        success: function() {
            if ($btn.closest('table').find('tr').length == 0) $('.not-found').removeClass('hidden');
            $btn.closest('tr').remove();
        },
        error: function(jqXHR, textStatus, errorThrown) {
            alert(textStatus + ': ' + errorThrown);
        }
    });
    return false;
});

$('#table-wrapper').on('click', '.table .btn-update', function() {
    $groupData.removeClass('modal-add').addClass('modal-edit');
    $groupData.modal('show');
    $('input[name="Group_date_range"]', $groupData)
        .val($(this).closest('tr').find('.date-range').html().trim());
    $(this).closest('tr').find('.value').each(function(i, e) {
        $valueInputs.eq(i).val($(e).html().trim());
    });
    $groupData.find('form').attr('action', $(this).attr('href'));
    return false;
});
{{ void(this.endBlock()) }}

{{ this.registerJs(this.blocks['table_view_js'], constant('POS_END', this)) }}
