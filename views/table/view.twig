{{ use('yii/widgets/LinkPager') }}
{{ use('kartik/daterange/DateRangePicker') }}
{{ use('kartik/daterange/MomentAsset') }}
{{ use('yii/web/JqueryAsset') }}
{{ register_jquery_asset() }}
{{ register_moment_asset() }}
{{ set(this, 'params', {'breadcrumbs': [{
       'label': t('app', 'Tables'),
       'url': url(['table/index'])
   }, table_title]})
}}

{% set glyph_pencil = '<span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>' %}
{% set glyph_trash = '<span class="glyphicon glyphicon-trash" aria-hidden="true"></span>' %}
{% set glyph_export = '<span class="glyphicon glyphicon-export" aria-hidden="true"></span>' %}

<h1>{{ table_title }}</h1>
<p class="actions">
  <button type="button" class="btn btn-lg btn-primary" data-toggle="modal" data-target="#group-data">
    {{ t('app', 'New group') }}</button>
  <button type="button" class="btn btn-lg btn-success" data-toggle="modal" data-target="#group-data">
    {{ glyph_export | raw }}</span> CSV</button>
</p>
<h2>{{ t('app', 'Groups') }}</h2>
<div id="table-wrapper" class="scrollable-x">
  <table class="table table-bordered table-condensed table-stripped text-center" style="max-width: 100%">
    {% for level, row in table %}
      <tr>
        {% if first_iteration is not defined %}
          <th rowspan="{{ n_levels }}" class="bottom-column">{{ t('app', 'Date range') }}</th>
        {% endif %}
        {% for parent_id, item in row %}
          <th colspan="{{ item['no_leaves'] }}" rowspan="{{ item['span_levels'] }}" class="break-all bottom-column col-xs-1">
            {{ item['name'] }}
          </th>
        {% endfor %}
        {% if first_iteration is not defined %}
          <th rowspan="{{ n_levels }}" class="bottom-column"></th>
          {% set first_iteration = false %}
        {% endif %}
      </tr>
    {% endfor %}
    {% for group in groups %}
      <tr>
        <td nowrap><small class="date-range">{{ group['from'] }} - {{ group['to'] }}</small></td>
        {% for reading in group['itemReadingsExtended'] %}
          <td class="count">
            {{ reading['count'] }}
          </td>
        {% endfor %}
        <td class="actions">
          {{ html.a(glyph_pencil, url({0: 'table/ajax-save-readings', 
              'id': group['id']}), {'class': 'btn btn-update btn-xs btn-default'}) | raw }}</button>
          {{ html.a(glyph_trash, url({0: 'table/ajax-delete-group',
              'id': group['id']}), {'class': 'btn btn-add btn-xs btn-default'}) | raw }}</button>
        </td>
      </tr>
    {% endfor %}
  </table>
</div>

{{ link_pager_widget({'pagination': pagination}) }}

<div id="group-data" class="modal modal-add fade" tabindex="-1" role="dialog">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title modal-add-only">{{ t('app', 'New group') }}</h4>
        <h4 class="modal-title modal-edit-only">{{ t('app', 'Edit group') }}</h4>
      </div>
      <form class="modal-body">
        <div class="row">
          <div class="form-group col-md-4 col-sm-6">
            <label class="control-label">{{ t('app', 'Date range') }}</label>
            <div class="input-group">
              <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                {{ date_range_picker_widget({
                     'model': group_model,
                     'name': 'Group_date_range'
                }) }}
            </div>
            <p class="help-block"></p>
          </div>
        </div>
        <label class="control-label modal-add-only">{{ t('app', 'New group readings') }}</label>
        <label class="control-label modal-edit-only">{{ t('app', 'Edit group readings') }}</label>
        <div class="scrollable-x">
          <table class="table table-bordered table-editable text-center">
            {% for level, row in table %}
              <tr>
                {% for parent_id, item in row %}
                  <th colspan="{{ item['no_leaves'] }}" rowspan="{{ item['span_levels'] }}" class="break-all bottom-column">
                    {{ item['name'] }}
                  </th>
                {% endfor %}
              </tr>
            {% endfor %}
            <tr>
              {% for item in items %}
                <td class="editable">
                  <input name="ItemReading[{{ item['id'] }}]" />
                </td>
              {% endfor %}
            </tr>
          </table>
        </div>
      </form>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal" >{{ t('app', 'Close') }}</button>
        <button type="submit" class="btn btn-primary modal-add-only" data-loading-text="{{ t('app', 'Adding group') }}...">{{ t('app', 'Add group') }}</button>
        <button type="submit" class="btn btn-primary modal-edit-only" data-loading-text="{{ t('app', 'Saving group') }}...">{{ t('app', 'Save group') }}</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

{{ void(this.beginBlock('table_view_js')) }}
$groupData = $('#group-data');
$countInputs = $groupData.find('table :input');

$('[type="submit"]', $groupData).on('click', function() {
    if ($groupData.hasClass('modal-add')) createReadings($(this));
    else updateReadings($(this));
});

function createReadings($btn) {
    $btn.button('loading');
    $('.form-group').removeClass('has-error');
    $('.help-block').html('');
    $.ajax({
        method: 'post',
        url: '{{ url(['table/ajax-save-readings']) | raw }}',
        data: $('#group-data').find('form').serialize(),
        dataType: 'json',
        error: function(jqXHR, textStatus, errorThrown) {
            msg = JSON.parse(jqXHR.responseJSON.message);
            console.log(msg);
            for (attr in msg) {
                $input = $('input[name="Group_{attr}"]'.replace('{attr}', attr));
                console.log(attr, msg[attr]);
                $input.closest('.form-group')
                    .addClass('has-error')
                    .find('.help-block')
                    .html(msg[attr].join(','));
            }
        },
        complete: function() {
            $btn.button('reset');
        },
        success: function() {
            location.reload();
        }
    });
}

function updateReadings($btn) {
    $btn.button('loading');
    var url = $('#group-data').find('form').attr('action');
    console.log($btn, url);
    $.ajax({
        method: 'post',
        url: url,
        data: $('#group-data').find('form').serialize(),
        dataType: 'json',
        complete: function() {
            $btn.button('reset');
        },
        success: function() {
            location.reload();
        }
    });
}

$('.actions .btn-primary').on('click', function() {
    $groupData.removeClass('modal-edit').addClass('modal-add');
    $groupData.modal('show');
    $('#group-data').find('form :input').val('');
    return false;
});

$('#table-wrapper').on('click', '.table .btn-update', function() {
    $groupData.removeClass('modal-add').addClass('modal-edit');
    $groupData.modal('show');
    $('input[name="Group_date_range"]', $groupData)
        .val($(this).closest('tr').find('.date-range').html().trim());
    $(this).closest('tr').find('.count').each(function(i, e) {
        $countInputs.eq(i).val($(e).html().trim());
    });
    $('#group-data').find('form').attr('action', $(this).attr('href'));
    return false;
});
{{ void(this.endBlock()) }}

{{ this.registerJs(this.blocks['table_view_js'], constant('POS_END', this)) }}
