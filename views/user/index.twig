{{ use('yii/grid/GridView') }}
{{ use('yii/widgets/Pjax') }}
{{ use('yii/widgets/ActiveForm') }}

{{ set(this, 'params', {'breadcrumbs': [t('app', 'Users')]}) }}

<h1>{{ t('app', 'Users') }}</h1>


{% set buttons_tpl = '{view}' %}
{% if app.user().can('admin') %}
  <p class="actions">
    <button type="button" class="btn btn-add btn-lg btn-primary" data-toggle="modal" data-target="#new-user">
      {{ t('app', 'New user') }}</button>
  </p>
  {% set buttons_tpl = buttons_tpl ~ '{update}{delete}' %}
{% endif %}

{{ pjax_begin({timeout: 20000, id: 'users'}) }}
{{ grid_view_widget({
    dataProvider: dataProvider,
    columns: [
        {attribute: 'id', contentOptions: {class: 'id', 'data-id': true}},
        {attribute: 'username', contentOptions: {'data-username': true}},
        {attribute: 'roles', content: [this.context, 'renderRoles']},
        {
            class: 'yii\\grid\\ActionColumn',
            contentOptions: {class: 'actions text-center'},
            buttonOptions: {class: 'btn btn-default btn-xs'},
            template: buttons_tpl 
        }
    ],
    summaryOptions: {
        class: 'pull-right',
        tag: 'em'
    }
   })
}}
{{ pjax_end() }}

<div id="user-modal" class="modal fade modal-add" tabindex="-1" role="dialog">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title modal-add-only">{{ t('app', 'New user') }}</h4>
        <h4 class="modal-title modal-edit-only">{{ t('app', 'Edit user') }}</h4>
      </div>
        {{ use('yii/widgets/ActiveForm') }}
        {% set form = active_form_begin({
               id: 'user-form',
               action: url(['user/ajax-save']),
               enableAjaxValidation: false,
               validateOnChange: false,
               validateOnBlur: false,
               validationUrl: url(['user/validate']),
               options: {
                   'data-pjax': true,
                   class: 'modal-body',
                   autocomplete: 'off'
               }
        }) %}
          {{ html.activeHiddenInput(model, 'id') | raw }}
          {{ form.field(model, 'username', {enableAjaxValidation: true}) | raw }}
          {{ form.field(model, 'password', {validateOnChange: true}).passwordInput() | raw }}
          {{ form.field(model, 'password_repeat', {validateOnChange: true}).passwordInput() | raw }}
          {{ form.field(model, 'is_admin').checkbox({value: 1}) | raw }}
        {{ active_form_end() }}
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">
          {{ t('app', 'Cancel') }}</button>
        <button type="submit" class="btn btn-primary modal-add-only" data-loading-text="{{ t('app', 'Adding user...') }}">
          {{ t('app', 'Add user') }}</button>
        <button type="submit" class="btn btn-primary modal-edit-only" data-loading-text="{{ t('app', 'Updating user...') }}">
          {{ t('app', 'Update user') }}</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

{{ void(this.beginBlock('user_index_js')) }}
var $userModal = $('#user-modal');
var $userForm = $('#user-form');
$('.actions .btn-add').on('click', function() {
    $userModal.find('form :input').val('');
    $userModal.find('.has-success').removeClass('.has-success');
    $userForm.find('input[name="UserForm[is_admin]"]').prop('checked', false);
    $userModal.removeClass('modal-edit').addClass('modal-add');
    $userForm.find('input[name="UserForm[username]"]').attr('readonly', false);
    $userModal.modal('show');
    return false;
});

$('#users').on('click', '.table .actions a[href$="user/update"]', function() {
    $userModal.find('form :input').val('');
    $userModal.find('.has-success').removeClass('.has-success');
    $userModal.removeClass('modal-add').addClass('modal-edit');
    $userModal.modal('show');
    var roles = $.map($(this).closest('tr').find('[data-role]'), function(e) { return $(e).html().trim()});
    if (roles.indexOf('admin') != -1)
        $userForm.find('input[name="UserForm[is_admin]"]').prop('checked', true);
    else 
        $userForm.find('input[name="UserForm[is_admin]"]').prop('checked', false);

    $userForm.find('input[name="UserForm[id]"]')
        .val($(this).closest('tr').find('td[data-id]').html().trim());
    $userForm.find('input[name="UserForm[username]"]').attr('readonly', true)
        .val($(this).closest('tr').find('td[data-username]').html().trim());
    return false;
});

var $submitBtn;
$userForm.on('beforeSubmit', function(e) {
    // return false if form still have some validation errors
    if ($userForm.find('.has-error').length) {
        return false;
    }
    $('input[type="checkbox"]', $userForm).attr('value', 1);
    $.pjax.submit(e, '#users', {
        url: $userForm.attr('action') + window.location.search,
        push: false,
        replace: false,
        timeout: 20000,
        scrollTo: 0,
        maxCacheLength: 0
    });
    return false;
});
$('#users').on('pjax:end', function(xhr, options) {
    if ($submitBtn) $submitBtn.button('reset');
    $userModal.modal('hide');
});
$('button[type="submit"]', $userModal).on('click', function() {
    $submitBtn = $(this).button('loading');
    $userForm.submit();
});
{{ void(this.endBlock()) }}

{{ this.registerJs(this.blocks['user_index_js'], constant('POS_LOAD', this)) }}
